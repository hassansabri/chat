var express = require('express');
var io = require('socket.io');
var evented = require('../lib/eventedsocket');

var app = module.exports = express.createServer();
app.configure(function(){
  app.set('views', __dirname + '/views');
  app.set('view engine', 'jade');
  app.use(app.router);
  app.use(express.staticProvider(__dirname + '/public'));
});

// Main route 

app.get('/', function(req, res){
  res.render('index', { locals: { title : 'Eventedsocket' } });
});

// Socket.io/eventedsocket

var connections = 0;
var socket = io.listen(app);

// Add custom event handling to socket
socket = evented.socket(socket);

socket.on('connection', function (client) {

  // Adds custom event handling to client
  client = evented.client(client); 

  // Fire event to client
  client.emit('server:says', {
    something: 'Hello!'
  });

  // Listen for event from client
  client.on('client:says', function (data) { 
    console.log('Client says: ' + data.somethingelse);
  }); 

  connections += 1;

  // Broadcast event to all clients
  client.broadcast('clients:total', connections);

  client.on('disconnect', function () {
    connections -= 1;

    // Broadcast event to all clients,
    // you may also use the socket for this
    socket.broadcast('clients:total', connections);
  });
});

if (!module.parent) {
  app.listen(3000);
  console.log("Express server with eventedsocket/socket.io listening on port %d", app.address().port)
}
